{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "functions" : { },
    "codeGenConfiguration" : {
      "editableConfig" : true,
      "plibVersion" : {
        "mavenVersion" : "8.0.31"
      },
      "sparkConfigJinjaEnabled" : true
    },
    "id" : "1",
    "uri" : "pipelines/Automation_scala_ReusableJobCluster_Pipeline",
    "pipelineSettingsInfo" : {
      "applicationName" : "Automation_scala_ReusableJobCluster_Pipeline",
      "hasApplication" : true,
      "isFunctionsPackageDirDefined" : true
    },
    "language" : "scala",
    "fabricId" : "65",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "abhishekse2etestsprophecyioteam.automationscalareusablejobcluster.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalagems.functions", "io.prophecy.warehousegems.functions", "io.prophecy.scalamaskinggems.functions", "io.prophecy.abiscalagems.functions", "abhishekse2etestsprophecyioteam.scalaproject.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "c_string",
          "kind" : {
            "type" : "string",
            "value" : "string$$%^&*#@"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_int",
          "kind" : {
            "type" : "int",
            "value" : 65530
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_boolean",
          "kind" : {
            "type" : "boolean",
            "value" : true
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_short",
          "kind" : {
            "type" : "short",
            "value" : 2
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_double",
          "kind" : {
            "type" : "double",
            "value" : 22
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_float",
          "kind" : {
            "type" : "float",
            "value" : -2.2
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_long",
          "kind" : {
            "type" : "long",
            "value" : -2
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        }, {
          "name" : "c_spark_expression",
          "kind" : {
            "type" : "spark_expression",
            "value" : "concat('a','b')"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "1",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "2",
      "projectName" : "ProphecyWarehouseScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "3",
      "projectName" : "ProphecyMaskingScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "8",
      "projectName" : "ProphecySparkAbinitioScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "168",
      "projectName" : "scala_project",
      "externalDependencies" : [ {
        "type" : "plibMaven",
        "modifiedAt" : "2024-08-21T05:26:23.778145Z",
        "name" : "plibMaven",
        "enabled" : true,
        "version" : "8.2.1",
        "id" : "2029394713",
        "createdAt" : "2024-08-21T05:26:23.778145Z",
        "entity" : "Project"
      } ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.automation_scala_reusablejobcluster_pipeline",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "ZGRNwCZa-TEC_omqya95a",
    "source" : "NhAv-DkS9U7tMAWYWff5W$$9OQAsQBXq4xbv5hdf8ug-",
    "sourcePort" : "YklFVbdIOSXsWRpNK_qxr$$r4k6EYtQV_UVrob6JSypy",
    "target" : "hHe5MwoRRmUeCsYvS7dS_$$-LT_GagMpDR6m_CS6ml_C",
    "targetPort" : "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW"
  } ],
  "processes" : {
    "NhAv-DkS9U7tMAWYWff5W$$9OQAsQBXq4xbv5hdf8ug-" : {
      "id" : "NhAv-DkS9U7tMAWYWff5W$$9OQAsQBXq4xbv5hdf8ug-",
      "component" : "Source",
      "metadata" : {
        "label" : "dataset_cust_in",
        "slug" : "dataset_cust_in",
        "x" : -580,
        "y" : -220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Loads customer data from a CSV file, enabling access to essential customer information for analysis.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "YklFVbdIOSXsWRpNK_qxr$$r4k6EYtQV_UVrob6JSypy",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "gitUri=http://gitserver:3000/dAWtdk8h_team_147/maAl0ym9_project_168.git&subPath=&tag=scala_project/v2&projectSubscriptionProjectId=168&path=datasets/dataset_cust_in"
      }
    },
    "hHe5MwoRRmUeCsYvS7dS_$$-LT_GagMpDR6m_CS6ml_C" : {
      "id" : "hHe5MwoRRmUeCsYvS7dS_$$-LT_GagMpDR6m_CS6ml_C",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Reformat_1",
        "slug" : "Reformat_1",
        "x" : -440,
        "y" : -220,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "6iaTmoz4PWU0RNHAi2L6g$$ksAVT3bVDY3kmshNYMebj",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##customer_id", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##first_name", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##last_name", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##phone", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##email", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##country_code", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##account_open_date", "_fShtnhj2nyD0-mCN9ooS$$b9CJpEEwiVJ86Y6hExzmW##account_flags" ],
        "expressions" : [ {
          "target" : "col1",
          "expression" : {
            "format" : "sql",
            "expression" : "concat('$c_string', '$c_int', '$c_boolean', '$c_short', '$c_double', '$c_float', '$c_long')"
          },
          "description" : ""
        }, {
          "target" : "col2",
          "expression" : {
            "format" : "sql",
            "expression" : "expr('$c_spark_expression')"
          },
          "description" : ""
        }, {
          "target" : "customer_id",
          "expression" : {
            "format" : "sql",
            "expression" : "customer_id"
          },
          "description" : ""
        }, {
          "target" : "first_name",
          "expression" : {
            "format" : "sql",
            "expression" : "first_name"
          },
          "description" : ""
        }, {
          "target" : "last_name",
          "expression" : {
            "format" : "sql",
            "expression" : "last_name"
          },
          "description" : ""
        }, {
          "target" : "phone",
          "expression" : {
            "format" : "sql",
            "expression" : "phone"
          },
          "description" : ""
        }, {
          "target" : "email",
          "expression" : {
            "format" : "sql",
            "expression" : "email"
          },
          "description" : ""
        }, {
          "target" : "country_code",
          "expression" : {
            "format" : "sql",
            "expression" : "country_code"
          },
          "description" : ""
        }, {
          "target" : "account_open_date",
          "expression" : {
            "format" : "sql",
            "expression" : "account_open_date"
          },
          "description" : ""
        }, {
          "target" : "account_flags",
          "expression" : {
            "format" : "sql",
            "expression" : "account_flags"
          },
          "description" : ""
        } ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/XIUGo8J6_team_2/XIUGo8J6_project_1.git&subPath=&tag=0.2.5.5&projectSubscriptionProjectId=1&path=gems/Reformat",
        "projectName" : "ProphecySparkBasicsScala"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  },
  "diagnostics" : [ {
    "property" : "$.workflow.processes.hHe5MwoRRmUeCsYvS7dS_$$-LT_GagMpDR6m_CS6ml_C",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Exception when sending request: POST http://scala-schema-analysis-10le0p.scala.cznl.svc.cluster.local:9101/schemaAnalysis",
    "tags" : [ ],
    "relatedInformation" : [ ]
  } ]
}